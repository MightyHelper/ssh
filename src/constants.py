from enum import IntEnum
from typing import Self


class SSHConstants(IntEnum):
    """Graciously donated by https://javadoc.io/doc/org.apache.sshd/sshd-common/2.6.0/constant-values.html#org.apache.sshd.common.SshConstants"""
    SSH2_MSG_NONE = 0
    # SSH2_MSG_TRANSPORT_MIN = 1
    # SSH2_MSG_TRANSPORT_MAX = 49
    # SSH2_MSG_USERAUTH_MIN = 50
    # SSH2_MSG_USERAUTH_MAX = 79
    # SSH2_MSG_USERAUTH_PER_METHOD_MIN = 60
    # SSH2_MSG_USERAUTH_PER_METHOD_MAX = SSH2_MSG_USERAUTH_MAX
    # SSH2_MSG_CONNECTION_MIN = 80
    # SSH2_MSG_CONNECTION_MAX = 127
    # SSH2_MSG_RESERVED_MIN = 128
    # SSH2_MSG_RESERVED_MAX = 191
    # SSH2_MSG_LOCAL_MIN = 192
    # SSH2_MSG_LOCAL_MAX = 255
    # SSH2_MSG_MIN = 1
    # SSH2_MSG_MAX = 255
    SSH2_MSG_DISCONNECT = 1
    SSH2_MSG_IGNORE = 2
    SSH2_MSG_UNIMPLEMENTED = 3
    SSH2_MSG_DEBUG = 4
    SSH2_MSG_SERVICE_REQUEST = 5
    SSH2_MSG_SERVICE_ACCEPT = 6
    SSH2_MSG_EXT_INFO = 7
    SSH2_MSG_KEXINIT = 20
    SSH2_MSG_NEWKEYS = 21
    SSH2_MSG_KEXDH_INIT = 30
    SSH2_MSG_KEXDH_REPLY = 31
    SSH2_MSG_KEX_DH_GEX_REQUEST_OLD = 30
    SSH2_MSG_KEX_DH_GEX_GROUP = 31
    SSH2_MSG_KEX_DH_GEX_INIT = 32
    SSH2_MSG_KEX_DH_GEX_REPLY = 33
    SSH2_MSG_KEX_DH_GEX_REQUEST = 34
    SSH2_MSG_KEX_ECDH_INIT = 30
    SSH2_MSG_KEX_ECDH_REPLY = 31
    SSH2_MSG_USERAUTH_REQUEST = 50
    SSH2_MSG_USERAUTH_FAILURE = 51
    SSH2_MSG_USERAUTH_SUCCESS = 52
    SSH2_MSG_USERAUTH_BANNER = 53
    SSH2_MSG_USERAUTH_PK_OK = 60
    SSH2_MSG_USERAUTH_PASSWD_CHANGEREQ = 60
    SSH2_MSG_USERAUTH_INFO_REQUEST = 60
    SSH2_MSG_USERAUTH_INFO_RESPONSE = 61
    SSH2_MSG_GLOBAL_REQUEST = 80
    SSH2_MSG_REQUEST_SUCCESS = 81
    SSH2_MSG_REQUEST_FAILURE = 82
    SSH2_MSG_CHANNEL_OPEN = 90
    SSH2_MSG_CHANNEL_OPEN_CONFIRMATION = 91
    SSH2_MSG_CHANNEL_OPEN_FAILURE = 92
    SSH2_MSG_CHANNEL_WINDOW_ADJUST = 93
    SSH2_MSG_CHANNEL_DATA = 94
    SSH2_MSG_CHANNEL_EXTENDED_DATA = 95
    SSH2_MSG_CHANNEL_EOF = 96
    SSH2_MSG_CHANNEL_CLOSE = 97
    SSH2_MSG_CHANNEL_REQUEST = 98
    SSH2_MSG_CHANNEL_SUCCESS = 99
    SSH2_MSG_CHANNEL_FAILURE = 100
    SSH2_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT = 1
    SSH2_DISCONNECT_PROTOCOL_ERROR = 2
    SSH2_DISCONNECT_KEY_EXCHANGE_FAILED = 3
    SSH2_DISCONNECT_HOST_AUTHENTICATION_FAILED = 4
    SSH2_DISCONNECT_RESERVED = 4
    SSH2_DISCONNECT_MAC_ERROR = 5
    SSH2_DISCONNECT_COMPRESSION_ERROR = 6
    SSH2_DISCONNECT_SERVICE_NOT_AVAILABLE = 7
    SSH2_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED = 8
    SSH2_DISCONNECT_HOST_KEY_NOT_VERIFIABLE = 9
    SSH2_DISCONNECT_CONNECTION_LOST = 10
    SSH2_DISCONNECT_BY_APPLICATION = 11
    SSH2_DISCONNECT_TOO_MANY_CONNECTIONS = 12
    SSH2_DISCONNECT_AUTH_CANCELLED_BY_USER = 13
    SSH2_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE = 14
    SSH2_DISCONNECT_ILLEGAL_USER_NAME = 15
    SSH2_OPEN_ADMINISTRATIVELY_PROHIBITED = 1
    SSH2_OPEN_CONNECT_FAILED = 2
    SSH2_OPEN_UNKNOWN_CHANNEL_TYPE = 3
    SSH2_OPEN_RESOURCE_SHORTAGE = 4
    SSH2_EXTENDED_DATA_STDERR = 1
    SSH2_CERT_TYPE_USER = 1
    SSH2_CERT_TYPE_HOST = 2

    @classmethod
    def find_by_value(cls, prefix: str, value: int) -> Self:
        for item in SSHConstants:
            if item.value == value and item.name.startswith(prefix.upper()):
                return item
        raise ValueError(f'No {prefix} found for value {value}')
